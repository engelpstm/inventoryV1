<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Sistema de Inventário</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .login-container {
            max-width: 400px;
            margin: 100px auto;
        }
        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .card-header {
            background-color: #007bff;
            color: white;
            text-align: center;
            border-radius: 10px 10px 0 0 !important;
            padding: 1.5rem;
        }
        .card-header i {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        .form-control {
            padding: 0.75rem;
        }
        .btn-login {
            padding: 0.75rem;
            font-weight: bold;
        }
        .alert {
            margin-bottom: 1rem;
            display: none;
        }
        .spinner-border {
            display: none;
            width: 1.5rem;
            height: 1.5rem;
            margin-right: 0.5rem;
        }
        .invalid-feedback {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="login-container">
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-person-circle"></i>
                    <h4 class="mb-0">Login</h4>
                </div>
                <div class="card-body p-4">
                    <div class="alert alert-danger" id="loginError" role="alert" style="display: none; margin-bottom: 1rem;"></div>
                    <form id="loginForm" action="/login" method="POST" novalidate>
                        <div class="mb-3">
                            <label for="username" class="form-label">Usuário</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-person"></i>
                                </span>
                                <input type="text" class="form-control" id="username" name="username" required 
                                       minlength="3" maxlength="50" autocomplete="username">
                                <div class="invalid-feedback">
                                    O nome de usuário é obrigatório (mínimo 3 caracteres)
                                </div>
                            </div>
                        </div>
                        <div class="mb-4">
                            <label for="password" class="form-label">Senha</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-lock"></i>
                                </span>
                                <input type="password" class="form-control" id="password" name="password" required 
                                       minlength="6" maxlength="50" autocomplete="current-password">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <div class="invalid-feedback">
                                    A senha é obrigatória (mínimo 6 caracteres)
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary btn-login w-100 mb-3">
                            <span class="spinner-border" role="status" aria-hidden="true"></span>
                            Entrar
                        </button>
                        <button type="button" class="btn btn-secondary w-100" data-bs-toggle="modal" data-bs-target="#createUserModal">
                            Criar Novo Usuário
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Criação de Usuário -->
    <div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createUserModalLabel">Criar Novo Usuário</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" id="createUserError" style="display: none;"></div>
                    <div class="alert alert-success" id="createUserSuccess" style="display: none;"></div>
                    <form id="createUserForm">
                        <div class="mb-3">
                            <label for="newUsername" class="form-label">Usuário</label>
                            <input type="text" class="form-control" id="newUsername" required>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">Senha</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="newPassword" required>
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="submitCreateUser">
                        <span class="spinner-border" role="status" aria-hidden="true" style="display: none;"></span>
                        Criar Usuário
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const spinner = document.querySelector('.spinner-border');
            const errorAlert = document.getElementById('loginError');
            
            try {
                spinner.style.display = 'inline-block';
                
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username, password })
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    // Redirecionar para a página principal
                    window.location.href = '/';
                } else {
                    // Mostrar mensagem de erro
                    errorAlert.textContent = data.error || 'Erro ao fazer login';
                    errorAlert.style.display = 'block';
                    spinner.style.display = 'none';
                }
            } catch (error) {
                console.error('Erro:', error);
                errorAlert.textContent = 'Erro ao conectar com o servidor';
                errorAlert.style.display = 'block';
                spinner.style.display = 'none';
            }
        });

        // Toggle password visibility
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('password');
            const icon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

        // Função para criar usuário
        document.getElementById('submitCreateUser').addEventListener('click', async function() {
            const username = document.getElementById('newUsername').value;
            const password = document.getElementById('newPassword').value;
            const errorAlert = document.getElementById('createUserError');
            const successAlert = document.getElementById('createUserSuccess');
            const spinner = this.querySelector('.spinner-border');
            
            if (!username || !password) {
                errorAlert.textContent = 'Por favor, preencha todos os campos';
                errorAlert.style.display = 'block';
                successAlert.style.display = 'none';
                return;
            }

            try {
                spinner.style.display = 'inline-block';
                this.disabled = true;
                
                const response = await fetch('/create-user', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, password })
                });

                const data = await response.json();

                if (response.ok) {
                    successAlert.textContent = data.message;
                    successAlert.style.display = 'block';
                    errorAlert.style.display = 'none';
                    document.getElementById('createUserForm').reset();
                    
                    if (data.autoLogin) {
                        // Redirecionar para a página principal após login automático
                        window.location.href = '/';
                    } else {
                        // Fechar o modal após 2 segundos se não houver login automático
                        setTimeout(() => {
                            const modal = bootstrap.Modal.getInstance(document.getElementById('createUserModal'));
                            modal.hide();
                            successAlert.style.display = 'none';
                        }, 2000);
                    }
                } else {
                    errorAlert.textContent = data.error;
                    errorAlert.style.display = 'block';
                    successAlert.style.display = 'none';
                }
            } catch (error) {
                errorAlert.textContent = 'Erro ao criar usuário';
                errorAlert.style.display = 'block';
                successAlert.style.display = 'none';
            } finally {
                spinner.style.display = 'none';
                this.disabled = false;
            }
        });

        // Toggle password visibility for new password
        document.getElementById('toggleNewPassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('newPassword');
            const icon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });
    </script>
</body>
</html>
