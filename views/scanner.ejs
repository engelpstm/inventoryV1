<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scanner QR Code</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Adicionar biblioteca HTML5-QRCode -->
    <script src="https://unpkg.com/html5-qrcode"></script>
</head>
<body>
    <div class="container mt-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Scanner QR Code</h5>
            </div>
            <div class="card-body">
                <div id="reader"></div>
                <div id="result"></div>
            </div>
            <div class="card-footer">
                <a href="/" class="btn btn-primary">Voltar</a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function onScanSuccess(decodedText, decodedResult) {
            console.log('QR Code lido:', decodedText);
            
            // Tentar extrair o ID do bem do QR code
            let bemId;
            
            try {
                // Tentar primeiro como URL completa
                const url = new URL(decodedText);
                const pathParts = url.pathname.split('/');
                bemId = pathParts[pathParts.length - 1];
            } catch (e) {
                // Se não for uma URL válida, tentar como ID direto
                bemId = decodedText;
            }

            // Extrair apenas os primeiros 6 dígitos como ID do bem
            // Assumindo que o formato é: IDIDID20250130030000000
            // onde IDIDID são os 6 primeiros dígitos que representam o ID real
            bemId = bemId.replace(/\D/g, '').substring(0, 6);

            if (!bemId) {
                Swal.fire({
                    icon: 'error',
                    title: 'QR Code inválido',
                    text: 'O QR Code não contém um ID de bem válido.',
                    confirmButtonText: 'OK'
                });
                return;
            }

            console.log('ID do bem extraído:', bemId);

            // Verificar se o bem existe
            fetch(`/verificar-bem/${bemId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.exists) {
                        window.location.href = `/bem/${bemId}`;
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Bem não encontrado',
                            text: 'O item escaneado não foi encontrado no sistema.',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro',
                        text: 'Erro ao verificar o item: ' + error.message,
                        confirmButtonText: 'OK'
                    });
                });
        }

        function onScanFailure(error) {
            // Erro de leitura - não precisa fazer nada
            console.log('Erro de leitura:', error);
        }

        // Configurar o scanner com melhor qualidade
        let html5QrcodeScanner = new Html5QrcodeScanner(
            "reader",
            { 
                fps: 10, 
                qrbox: {width: 250, height: 250},
                experimentalFeatures: {
                    useBarCodeDetectorIfSupported: true
                },
                rememberLastUsedCamera: true,
                showTorchButtonIfSupported: true
            },
            /* verbose= */ false
        );
        html5QrcodeScanner.render(onScanSuccess, onScanFailure);
    </script>

    <style>
        #reader {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }
        #reader video {
            max-width: 100%;
        }
        /* Melhorar a visibilidade do leitor */
        #reader__scan_region {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        #reader__camera_selection {
            margin: 10px 0;
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
    </style>
</body>
</html>
